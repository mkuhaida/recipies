// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recipes;

#nullable disable

namespace Recipes.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Recipes.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DifficultyLevel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Section")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Recipies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03d5a75a-46ce-4c7f-9a12-f762f2331dc5"),
                            CreatedOn = new DateTime(2023, 12, 26, 5, 29, 2, 122, DateTimeKind.Local).AddTicks(5334),
                            Description = "You'll find the full, step-by-step recipe below — but here's a brief overview of what you can expect when you make baked potato soup at home:  Cook the bacon.  Melt the butter, then whisk in the flour and milk.  Add the potatoes and onions.",
                            DifficultyLevel = 3.3m,
                            Name = "Baked Potato Soup",
                            Section = 3,
                            UserId = new Guid("4b6a1054-4fe8-4ce1-b6ac-6180b1da7095")
                        });
                });

            modelBuilder.Entity("Recipes.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b6a1054-4fe8-4ce1-b6ac-6180b1da7095"),
                            BirthDate = new DateTime(2000, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nefedova.v@gmail.com",
                            FullName = "Nefedova Vasilisa Fedorovna",
                            Phone = "+375(29)783-56-05",
                            UserLevel = 0
                        },
                        new
                        {
                            Id = new Guid("9257793e-8cb7-11ee-a4a2-80e82c270b17"),
                            BirthDate = new DateTime(2002, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "smirnova123456@mail.ru",
                            FullName = "Smirnova Alena Rostislavovna",
                            Phone = "+375(33)853-86-98",
                            UserLevel = 0
                        });
                });

            modelBuilder.Entity("Recipes.Entities.Recipe", b =>
                {
                    b.HasOne("Recipes.Entities.User", "User")
                        .WithMany("Recipies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Recipes.Entities.User", b =>
                {
                    b.Navigation("Recipies");
                });
#pragma warning restore 612, 618
        }
    }
}
